https://leetcode.com/problems/find-closest-node-to-given-two-nodes/  


There are many ways to solve this problem 
1.the way i though of like a with the help of a map
2. 2 dfs
3 bfs

go through the problem go through the discussion, sure will not waste your time

int closestMeetingNode(vector<int>& e, int n1, int n2) 
    {
      
        int n=e.size();
        if(n1==n2)
        return n1;
        map<int,int>mp;
        vector<int>vis1(n,-1);
        vector<int>vis2(n,-1);
        
        for(int i=0;i<n;i++)
        {
            mp[i]=e[i];
        }
        
        int s1=mp[n1];
        int count=1;
        
        while(true)
        {
            if(s1==-1 || vis1[s1]!=-1)
            {
                break;
            }
            else
            {
                vis1[s1]=count;
                count++;
            }
            s1=mp[s1];
        }
        int s2=mp[n2];
       count=1;
        while(true)
        {
            if(s2==-1 || vis2[s2]!=-1)
            {
                break;
            }
            else
            {
                vis2[s2]=count;
                count++;
            }
            s2=mp[s2];
        }
        vis1[n1]=0;
        vis2[n2]=0;
        int mini=1e9;
        int ans=-1;
        for(int i=n-1;i>=0;i--)
        {
            if(vis1[i]!=-1 && vis2[i]!=-1)
            {
                if(mini>=max(vis1[i],vis2[i]))
                {mini=max(vis1[i],vis2[i]);
                ans=i;}
            }
            
        }
        if(mini==1e9)
        return -1;
        return ans;
        
    }   




